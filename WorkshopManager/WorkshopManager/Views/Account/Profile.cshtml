@model WorkshopManager.ViewModels.Account.UserProfileViewModel
@{
    ViewData["Title"] = "Mój profil";
}

<div class="row justify-content-center">
    <div class="col-md-10">
        <div class="card">
            <div class="card-header">
                <h4><i class="fas fa-user"></i> @ViewData["Title"]</h4>
                <small class="text-muted">Informacje o Twoim koncie użytkownika</small>
            </div>
            <div class="card-body">
                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                }

                <div class="row">
                    <div class="col-md-8">
                        <dl class="row">
                            <dt class="col-sm-4">
                                <i class="fas fa-envelope text-primary"></i> Email:
                            </dt>
                            <dd class="col-sm-8">
                                <span class="fw-bold">@Model.Email</span>
                                @if (Model.EmailConfirmed)
                                {
                                    <span class="badge bg-success ms-2">
                                        <i class="fas fa-check-circle"></i> Potwierdzony
                                    </span>
                                }
                                else
                                {
                                    <span class="badge bg-warning ms-2">
                                        <i class="fas fa-exclamation-triangle"></i> Niepotwierdzony
                                    </span>
                                }
                            </dd>

                            <dt class="col-sm-4">
                                <i class="fas fa-phone text-primary"></i> Telefon:
                            </dt>
                            <dd class="col-sm-8">
                                @if (!string.IsNullOrEmpty(Model.PhoneNumber))
                                {
                                    <span>@Model.PhoneNumber</span>
                                }
                                else
                                {
                                    <span class="text-muted">Nie podano</span>
                                    <small class="d-block text-muted">Możesz dodać numer telefonu kontaktując się z administratorem</small>
                                }
                            </dd>

                            <dt class="col-sm-4">
                                <i class="fas fa-user-tag text-primary"></i> Rola:
                            </dt>
                            <dd class="col-sm-8">
                                @if (!string.IsNullOrEmpty(Model.Role))
                                {
                                    <span class="badge bg-@(Model.Role == "Admin" ? "danger" : Model.Role == "Mechanik" ? "warning" : "info") fs-6">
                                        <i class="fas fa-@(Model.Role == "Admin" ? "crown" : Model.Role == "Mechanik" ? "wrench" : "desk")"></i>
                                        @Model.Role
                                    </span>
                                    <div class="mt-1">
                                        <small class="text-muted">
                                            @switch (Model.Role)
                                            {
                                                case "Admin":
                                                    <text>Pełny dostęp do systemu i zarządzanie użytkownikami</text>
                                                    break;
                                                case "Recepcjonista":
                                                    <text>Zarządzanie klientami, pojazdami, zleceniami i częściami</text>
                                                    break;
                                                case "Mechanik":
                                                    <text>Praca z zleceniami i zadaniami serwisowymi</text>
                                                    break;
                                                default:
                                                    <text>Podstawowy dostęp do systemu</text>
                                                    break;
                                            }
                                        </small>
                                    </div>
                                }
                                else
                                {
                                    <span class="badge bg-secondary">Brak przypisanej roli</span>
                                }
                            </dd>

                            <dt class="col-sm-4">
                                <i class="fas fa-shield-alt text-primary"></i> Status konta:
                            </dt>
                            <dd class="col-sm-8">
                                @if (Model.LockoutEnd.HasValue && Model.LockoutEnd > DateTime.UtcNow)
                                {
                                    <span class="badge bg-danger">
                                        <i class="fas fa-ban"></i> Zablokowane
                                    </span>
                                    <div class="mt-1">
                                        <small class="text-danger">
                                            Blokada do: @Model.LockoutEnd.Value.ToString("dd.MM.yyyy HH:mm")
                                        </small>
                                    </div>
                                }
                                else
                                {
                                    <span class="badge bg-success">
                                        <i class="fas fa-check"></i> Aktywne
                                    </span>
                                }
                            </dd>

                            <dt class="col-sm-4">
                                <i class="fas fa-key text-primary"></i> Bezpieczeństwo:
                            </dt>
                            <dd class="col-sm-8">
                                <span class="badge bg-info">
                                    <i class="fas fa-lock"></i> Hasło chronione
                                </span>
                                <div class="mt-1">
                                    <small class="text-muted">
                                        Ostatnia zmiana hasła: <em>Nieznana</em>
                                    </small>
                                </div>
                            </dd>
                        </dl>
                    </div>
                    <div class="col-md-4">
                        <div class="card bg-light">
                            <div class="card-body text-center">
                                <div class="mb-3">
                                    <i class="fas fa-user-circle fa-5x text-@(Model.Role == "Admin" ? "danger" : Model.Role == "Mechanik" ? "warning" : "info")"></i>
                                </div>
                                <h6 class="card-title">@Model.Email</h6>
                                <p class="card-text">
                                    @if (!string.IsNullOrEmpty(Model.Role))
                                    {
                                        <span class="badge bg-@(Model.Role == "Admin" ? "danger" : Model.Role == "Mechanik" ? "warning" : "info")">
                                            @Model.Role
                                        </span>
                                    }
                                </p>
                            </div>
                        </div>
                    </div>
                </div>

                <hr>

                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h6><i class="fas fa-cogs"></i> Akcje konta</h6>
                        <small class="text-muted">Zarządzaj swoim kontem użytkownika</small>
                    </div>
                    <div class="btn-group" role="group">
                        <a asp-action="ChangePassword" class="btn btn-warning">
                            <i class="fas fa-key"></i> Zmień hasło
                        </a>
                        <a asp-controller="Home" asp-action="Index" class="btn btn-primary">
                            <i class="fas fa-home"></i> Dashboard
                        </a>
                    </div>
                </div>

                @if (Model.Role == "Admin")
                {
                    <hr>
                    <div class="alert alert-info" role="alert">
                        <h6><i class="fas fa-crown"></i> Panel administratora</h6>
                        <p class="mb-2">Jako administrator masz dostęp do zaawansowanych funkcji systemu:</p>
                        <div class="d-flex gap-2 flex-wrap">
                            <a asp-controller="UserManagement" asp-action="Index" class="btn btn-sm btn-outline-danger">
                                <i class="fas fa-users-cog"></i> Zarządzanie użytkownikami
                            </a>
                            <a asp-controller="Account" asp-action="Register" class="btn btn-sm btn-outline-primary">
                                <i class="fas fa-user-plus"></i> Dodaj użytkownika
                            </a>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        setTimeout(function() {
            $('.alert-success').alert('close');
        }, 5000);

        document.addEventListener('DOMContentLoaded', function() {
            const badges = document.querySelectorAll('.badge');
            badges.forEach((badge, index) => {
                badge.style.opacity = '0';
                badge.style.transform = 'translateY(10px)';
                setTimeout(() => {
                    badge.style.transition = 'all 0.3s ease';
                    badge.style.opacity = '1';
                    badge.style.transform = 'translateY(0)';
                }, index * 100);
            });
        });
    </script>
}
@model WorkshopManager.ViewModels.Account.RegisterViewModel
@{
    ViewData["Title"] = "Dodaj nowego użytkownika";
}

<div class="row justify-content-center">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h4><i class="fas fa-user-plus"></i> @ViewData["Title"]</h4>
                <small class="text-muted">Tylko administrator może tworzyć nowe konta użytkowników</small>
            </div>
            <div class="card-body">
                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                }

                <form asp-action="Register" method="post">
                    @Html.AntiForgeryToken()
                    <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="Email" class="form-label">
                                    <i class="fas fa-envelope"></i> @Html.DisplayNameFor(model => model.Email)
                                </label>
                                <input asp-for="Email" class="form-control" placeholder="przykład@warsztat.pl" autocomplete="username" />
                                <span asp-validation-for="Email" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="Role" class="form-label">
                                    <i class="fas fa-user-tag"></i> @Html.DisplayNameFor(model => model.Role)
                                </label>
                                <select asp-for="Role" class="form-select">
                                    <option value="">-- Wybierz rolę --</option>
                                    @foreach (var role in Model.AvailableRoles)
                                    {
                                        <option value="@role">@role</option>
                                    }
                                </select>
                                <span asp-validation-for="Role" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="Password" class="form-label">
                                    <i class="fas fa-lock"></i> @Html.DisplayNameFor(model => model.Password)
                                </label>
                                <div class="input-group">
                                    <input asp-for="Password" class="form-control" type="password" autocomplete="new-password" />
                                    <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('Password')">
                                        <i class="fas fa-eye" id="Password-eye"></i>
                                    </button>
                                </div>
                                <span asp-validation-for="Password" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="ConfirmPassword" class="form-label">
                                    <i class="fas fa-lock"></i> @Html.DisplayNameFor(model => model.ConfirmPassword)
                                </label>
                                <input asp-for="ConfirmPassword" class="form-control" type="password" autocomplete="new-password" />
                                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="alert alert-info">
                        <h6><i class="fas fa-info-circle"></i> Informacje o rolach:</h6>
                        <ul class="mb-0">
                            <li><strong>Admin</strong> - pełny dostęp do systemu, zarządzanie użytkownikami</li>
                            <li><strong>Recepcjonista</strong> - zarządzanie klientami, pojazdami, zleceniami, częściami</li>
                            <li><strong>Mechanik</strong> - praca z zleceniami i zadaniami serwisowymi</li>
                        </ul>
                    </div>

                    <div class="alert alert-warning">
                        <h6><i class="fas fa-shield-alt"></i> Wymagania dotyczące hasła:</h6>
                        <ul class="mb-0">
                            <li>Co najmniej 6 znaków</li>
                            <li>Przynajmniej jedna wielka litera</li>
                            <li>Przynajmniej jedna mała litera</li>
                            <li>Przynajmniej jedna cyfra</li>
                            <li>Przynajmniej jeden znak specjalny</li>
                        </ul>
                    </div>

                    <div class="d-flex justify-content-between">
                        <a asp-controller="UserManagement" asp-action="Index" class="btn btn-secondary">
                            <i class="fas fa-arrow-left"></i> Powrót do listy użytkowników
                        </a>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save"></i> Utwórz użytkownika
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        function togglePassword(fieldId) {
            const field = document.getElementById(fieldId);
            const eye = document.getElementById(fieldId + '-eye');

            if (field.type === 'password') {
                field.type = 'text';
                eye.className = 'fas fa-eye-slash';
            } else {
                field.type = 'password';
                eye.className = 'fas fa-eye';
            }
        }

        setTimeout(function() {
            $('.alert-success').alert('close');
        }, 5000);

        @if (TempData["SuccessMessage"] != null)
        {
            <text>
                    document.addEventListener('DOMContentLoaded', function() {
                        document.getElementById('@Html.IdFor(m => m.Email)').value = '';
                        document.getElementById('@Html.IdFor(m => m.Password)').value = '';
                        document.getElementById('@Html.IdFor(m => m.ConfirmPassword)').value = '';
                        document.getElementById('@Html.IdFor(m => m.Role)').selectedIndex = 0;
                    });
            </text>
        }
    </script>
}
@model WorkshopManager.ViewModels.CreateUserViewModel
@{
    ViewData["Title"] = "Dodaj nowego użytkownika";
}

<div class="row justify-content-center">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h4><i class="fas fa-user-plus"></i> @ViewData["Title"]</h4>
            </div>
            <div class="card-body">
                <form asp-action="Create" method="post">
                    @Html.AntiForgeryToken()
                    <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                    <div class="mb-3">
                        <label asp-for="Email" class="form-label">
                            <i class="fas fa-envelope"></i> @Html.DisplayNameFor(model => model.Email)
                        </label>
                        <input asp-for="Email" class="form-control" placeholder="przykład@warsztat.pl" />
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Password" class="form-label">
                            <i class="fas fa-lock"></i> @Html.DisplayNameFor(model => model.Password)
                        </label>
                        <div class="input-group">
                            <input asp-for="Password" class="form-control" type="password" />
                            <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('Password')">
                                <i class="fas fa-eye" id="Password-eye"></i>
                            </button>
                        </div>
                        <span asp-validation-for="Password" class="text-danger"></span>
                        <div class="form-text">Hasło musi zawierać co najmniej 6 znaków, wielką literę, małą literę, cyfrę i znak specjalny.</div>
                    </div>

                    <div class="mb-3">
                        <label asp-for="ConfirmPassword" class="form-label">
                            <i class="fas fa-lock"></i> @Html.DisplayNameFor(model => model.ConfirmPassword)
                        </label>
                        <input asp-for="ConfirmPassword" class="form-control" type="password" />
                        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="SelectedRole" class="form-label">
                            <i class="fas fa-user-tag"></i> @Html.DisplayNameFor(model => model.SelectedRole)
                        </label>
                        <select asp-for="SelectedRole" class="form-select">
                            <option value="">-- Wybierz rolę --</option>
                            @foreach (var role in Model.AvailableRoles)
                            {
                                <option value="@role">@role</option>
                            }
                        </select>
                        <span asp-validation-for="SelectedRole" class="text-danger"></span>
                        <div class="form-text">
                            <strong>Admin</strong> - pełny dostęp do systemu<br>
                            <strong>Recepcjonista</strong> - zarządzanie klientami, pojazdami, zleceniami<br>
                            <strong>Mechanik</strong> - praca z zleceniami i zadaniami serwisowymi
                        </div>
                    </div>

                    <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                        <a asp-action="Index" class="btn btn-secondary me-md-2">
                            <i class="fas fa-times"></i> Anuluj
                        </a>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save"></i> Utwórz użytkownika
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        function togglePassword(fieldId) {
            const field = document.getElementById(fieldId);
            const eye = document.getElementById(fieldId + '-eye');

            if (field.type === 'password') {
                field.type = 'text';
                eye.className = 'fas fa-eye-slash';
            } else {
                field.type = 'password';
                eye.className = 'fas fa-eye';
            }
        }
    </script>
}